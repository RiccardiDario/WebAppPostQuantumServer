FROM nginx:alpine

# Passa a root per eventuali modifiche
USER root


# Aggiorna i pacchetti e installa le dipendenze necessarie
RUN apk update && apk add --no-cache \
    git \
    cmake \
    make \
    gcc \
    g++ \
    openssl \
    openssl-dev \
    libressl \
    python3 \
    py3-pip \
    py3-psutil \
    iproute2

# Scarica e compila liboqs
RUN git clone --depth 1 https://github.com/open-quantum-safe/liboqs.git /tmp/liboqs && \
    cd /tmp/liboqs && \
    mkdir build && cd build && \
    cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. && \
    make && make install && \
    rm -rf /tmp/liboqs

# Scarica e compila oqs-provider
RUN git clone https://github.com/open-quantum-safe/oqs-provider.git /tmp/oqs-provider && \
    cd /tmp/oqs-provider && \
    mkdir build && cd build && \
    cmake -S .. && \
    cmake --build . && \
    cmake --install . && \
    rm -rf /tmp/oqs-provider

# Configura il file openssl.cnf per il provider OQS
RUN echo 'openssl_conf = openssl_init' > /etc/ssl/openssl.cnf && \
    echo '[openssl_init]' >> /etc/ssl/openssl.cnf && \
    echo 'providers = provider_sect' >> /etc/ssl/openssl.cnf && \
    echo '[provider_sect]' >> /etc/ssl/openssl.cnf && \
    echo 'default = default_sect' >> /etc/ssl/openssl.cnf && \
    echo 'oqsprovider = oqsprovider_sect' >> /etc/ssl/openssl.cnf && \
    echo '[default_sect]' >> /etc/ssl/openssl.cnf && \
    echo 'activate = 1' >> /etc/ssl/openssl.cnf && \
    echo '[oqsprovider_sect]' >> /etc/ssl/openssl.cnf && \
    echo 'activate = 1' >> /etc/ssl/openssl.cnf

# Copia il file di configurazione principale di Nginx
COPY nginx.conf /etc/nginx/nginx.conf
COPY continuous_monitor.py /opt/nginx/scripts/continuous_monitor.py
COPY analyze_performance.py /opt/nginx/scripts/analyze_performance.py

# Comando per avviare il monitoraggio continuo e Nginx
CMD ["sh", "-c", "python3 /opt/nginx/scripts/continuous_monitor.py & python3 /opt/nginx/scripts/analyze_performance.py  & nginx -c /etc/nginx/nginx.conf -g 'daemon off;'"]

